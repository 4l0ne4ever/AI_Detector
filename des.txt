1. Problem Statement

With the rapid rise of generative AI tools (ChatGPT, LLaMA, Qwen…), it is becoming increasingly difficult to distinguish between human-written and AI-generated text. This is especially critical in academic and scientific contexts, where accuracy and originality are essential.

The goal of this project is to:

Build a system that can classify whether a scientific text is written by a human or generated by AI.

Compare the performance of traditional algorithms (Logistic Regression, SVM, Random Forest, MLP) against state-of-the-art language models (BERT/DistilBERT).

Evaluate the potential of applying such a system in real-world use cases.

2. Workflow
Step 1. Collect Human-written Data

Use the S2ORC dataset (Semantic Scholar Open Research Corpus) via API.

Fetch the latest release, download .gz shards, parse JSON.

Extract abstracts or body_text from papers.

Save in JSONL format (human_text_100k.jsonl), targeting 100,000 samples.

Step 2. Generate AI-written Data

For each human-written text sample:

Randomly pick an abstract/body segment.

Prompt a generative model (GPT/Qwen/LLaMA) to produce a paragraph of similar topic and length.

Result: a dataset of ~100k AI-generated texts.

Step 3. Data Preprocessing

Clean text (remove special characters, formulas, metadata).

Normalize (lowercasing, tokenization, stopword removal if needed).

Split into train / validation / test sets.

Step 4. Model Building

Baseline: Logistic Regression, SVM, Random Forest.

Neural Network: MLP.

Advanced: Fine-tuned BERT/DistilBERT.

Step 5. Evaluation

Metrics: Accuracy, Precision, Recall, F1-score, ROC-AUC.

Compare:

Traditional algorithms

Simple neural networks

Modern transformer-based models (BERT)

Step 6. Extensions

Test across different domains (Computer Science, Biology, Medicine…).

Experiment with multiple LLMs to assess robustness.

3. Implementation Plan

Tools: Python, requests + tqdm for crawling, scikit-learn for classical ML, PyTorch/Transformers for BERT fine-tuning.

Pipeline:

Crawl data from S2ORC (human text).

Generate AI-written text with LLM APIs.

Clean and preprocess.

Train classification models.

Compare and evaluate results.